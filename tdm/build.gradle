import java.nio.file.Paths

ext.title = 'THREDDS Data Manager (TDM)'

apply from: "$rootDir/gradle/any/dependencies.gradle"

// Because of the shadow jar (tdmFat.jar), we won't use java-published.gradle
// for this subproject.
apply from: "$rootDir/gradle/any/java-published.gradle"

apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
  implementation enforcedPlatform(project(':tds-platform'))

  compile project(':tdcommon')
  compile 'edu.ucar:httpservices'
  compile 'edu.ucar:cdm-core'
  compile 'edu.ucar:grib'

  compile 'org.apache.httpcomponents:httpclient'
  compile 'org.jdom:jdom2'
  compile 'org.springframework:spring-beans'
  compile 'org.springframework:spring-core'
  compile 'org.springframework:spring-context'
  compile 'com.google.protobuf:protobuf-java'
  compile 'com.beust:jcommander'
  compile 'com.google.guava:guava'

  compile 'org.slf4j:slf4j-api'
  runtime 'org.apache.logging.log4j:log4j-slf4j-impl'
}

shadowJar {
  baseName = 'tdmFat'
  setArchiveBaseName('tdmFat')
  classifier ''
  setArchiveClassifier ''
  doFirst {
    manifest.attributes jar.manifest.attributes
  }
  manifest.attributes 'Main-Class': 'thredds.tdm.Tdm'
  mergeServiceFiles()
  append 'META-INF/spring.factories'
  append 'META-INF/spring.handlers'
  append 'META-INF/spring.schemas'
  append 'META-INF/spring.tooling'
  destinationDirectory = Paths.get(rootDir.absolutePath, "build", "downloads").toFile()
  archiveFileName = "tdm-${project.getVersion()}.jar"
}

assemble.dependsOn shadowJar
