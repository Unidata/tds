apply plugin: 'java-platform'
apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/publishing.gradle"

// All dependencies used by the thredds-data-server project and subprojects are defined here

javaPlatform {
  allowDependencies()
}

dependencies {
  // enforcedPlatform says that we *must* use the versions defined by these platforms
  // when resolving dependencies (even transitively)
  // If there is a conflict (previously hidden by optimistic resolution), we should get an error when we build, and
  // at that point we can take things on a case-by-case basis.
  api enforcedPlatform("edu.ucar:netcdf-java-bom:${depVersion.netcdfJava}")
  api enforcedPlatform('org.springframework:spring-framework-bom:6.1.14')
  api enforcedPlatform('org.springframework.security:spring-security-bom:6.3.4')
  api platform('net.openhft:chronicle-bom:2.25ea62')
  api enforcedPlatform("org.apache.logging.log4j:log4j-bom:2.17.1")
  // remove log4j-jakarta-web and use log4j-jakarta-bom when that is released
  api platform("org.apache.logging.log4j:log4j-jakarta-web:2.23.1") {
    // Use version from edal-java for h2database
    exclude group: 'com.h2database', module: 'h2'
  }
  api enforcedPlatform("jakarta.platform:jakarta.jakartaee-bom:9.0.0")


  constraints {
    // dependencies without explicit versions are getting their version set by one of the platforms above
    api 'edu.ucar:cdm-core'
    api 'edu.ucar:httpservices'
    api 'edu.ucar:grib'

    // tds - listed as compile, but most are likely runtime
    api 'edu.ucar:bufr'
    api 'edu.ucar:cdm-radial'
    api 'edu.ucar:cdm-misc'
    api 'edu.ucar:cdm-image'
    api 'edu.ucar:cdm-s3'
    api 'edu.ucar:cdm-zarr'
    api 'edu.ucar:netcdf4'
    api 'edu.ucar:cdm-mcidas'
    api 'edu.ucar:waterml'

    api 'com.google.protobuf:protobuf-java'
    api 'net.java.dev.jna:jna'
    api 'com.google.guava:guava'
    api 'org.jdom:jdom2'
    api 'org.apache.httpcomponents:httpclient'
    api 'com.beust:jcommander'
    api 'joda-time:joda-time'

    api 'org.quartz-scheduler:quartz:2.3.2'
    api 'net.openhft:chronicle-map'

    // Annotations
    // Nullable
    api 'com.google.code.findbugs:jsr305'
    // Resource
    api 'jakarta.annotation:jakarta.annotation-api'

    // tds logging
    api 'org.slf4j:slf4j-api'
    api 'org.apache.logging.log4j:log4j-slf4j-impl'
    runtime 'ch.qos.logback:logback-classic'

    // Spring
    api 'org.springframework:spring-core'
    api 'org.springframework:spring-context'
    api 'org.springframework:spring-beans'
    api 'org.springframework:spring-web'
    api 'org.springframework:spring-webmvc'
    api 'org.springframework.security:spring-security-web'
    runtime 'org.springframework.security:spring-security-config'

    // opendap
    api 'edu.ucar:opendap'
    api "jakarta.servlet:jakarta.servlet-api"
    api "jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0"
    api "org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0"
    runtime 'org.apache.taglibs:taglibs-standard-spec:1.2.5'
    runtime 'org.apache.taglibs:taglibs-standard-impl:1.2.5'

    // dap4
    runtime 'edu.ucar:dap4'

    // defined in tds-testing-platform as well, but using api config
    runtime 'org.apache.logging.log4j:log4j-jakarta-web'

    // tds
    api 'org.json:json:20231013'
    api 'com.coverity.security:coverity-escapers:1.1.1'
    api 'org.thymeleaf:thymeleaf-spring6:3.1.2.RELEASE'
    api 'jakarta.validation:jakarta.validation-api'
    api "org.hibernate.validator:hibernate-validator:${depVersion.hibernateValidator}"
    api "org.hibernate.validator:hibernate-validator-annotation-processor:${depVersion.hibernateValidator}"
    api 'jakarta.el:jakarta.el-api'
    api'org.apache.commons:commons-lang3:3.4'
    runtime 'org.glassfish:jakarta.el:4.0.2'
    runtime "jaxen:jaxen:${depVersion.jaxen}"

    // waterml stuff
    api 'org.apache.xmlbeans:xmlbeans'
    api 'org.n52.sensorweb:52n-xml-waterML-v20'
    api 'org.n52.sensorweb:52n-xml-om-v20'

    // edal-java (ncwms)
    def edalVersion = '1.5.2.1-SNAPSHOT'
    api "uk.ac.rdg.resc:edal-common:${edalVersion}"
    api "uk.ac.rdg.resc:edal-cdm:${edalVersion}"
    api "uk.ac.rdg.resc:edal-wms:${edalVersion}"
    api "uk.ac.rdg.resc:edal-graphics:${edalVersion}"
    api "uk.ac.rdg.resc:edal-godiva:${edalVersion}"

    // gwt version defined in gradle/any/shared-mvn-coords.gradle, accessible via gradle/any/dependencies.gradle
    api "com.google.gwt:gwt-dev:${depVersion.gwt}"
    api "com.google.gwt:gwt-user:${depVersion.gwt}"
  }
}

publishing {
  publications {
    tdsPlatformBom(MavenPublication) {
      from components.javaPlatform
    }
  }
}
