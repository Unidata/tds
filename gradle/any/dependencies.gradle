apply from: "$rootDir/gradle/any/shared-mvn-coords.gradle"

// Gradle dependency management.
// This technique was inspired by: http://stackoverflow.com/questions/9547170
//
// Usage:
//   All gradle build scripts will apply this script using:
//     apply from: "$rootDir/gradle/any/dependencies.gradle"
//

//================================================ Repositories ================================================//

repositories {
  mavenCentral()
  // uncomment for release process
//  mavenLocal()

  // chronicle-bom needs access to chronicle snapshots
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/'
  }

  // All of the hosted repositories below could be replaced with:
  //     url "https://artifacts.unidata.ucar.edu/repository/unidata-all/"
  // which is a group repository that contains all other repositories. However, I prefer to list all source
  // repos explicitly so that we know where all artifacts ultimately come from.

  // Hosted release repositories.
  maven {
    url 'https://artifacts.unidata.ucar.edu/repository/unidata-releases/'
  }
  maven {
    url 'https://artifacts.unidata.ucar.edu/repository/unidata-snapshots/'
  }
  maven {
    url 'https://artifacts.unidata.ucar.edu/repository/unidata-3rdparty/'
    content {
      // this repository *only* used for artifacts with group "org.bounce" (NcML editor in toolsUI)
      includeGroup 'org.bounce'
    }
  }
}

//////////////////////////// Transitive dependency replacements and exclusions ////////////////////////////
// Executes the given closure against all objects in this collection, and any objects subsequently added to this
// collection. See org.gradle.api.DomainObjectCollection.all(Closure)

configurations.all {
  resolutionStrategy.dependencySubstitution {
    // Replace every instance of "commons-logging" in the dependency tree with "jcl-over-slf4j". This effectively
    // converts every JCL call to an slf4j call. We can see the first-level dependencies that drag in
    // "commons-logging" by commenting-out the rule below and running:
    /*
         ./gradlew -q :cdm:cdm-core:dependencyInsight --configuration compileClasspath --dependency commons-logging

        commons-logging:commons-logging:1.2
        +--- org.apache.httpcomponents:httpclient:4.5.12
        |    ...
     */
    substitute module('commons-logging:commons-logging') because 'we want to control JCL logging with slf4j' with module("org.slf4j:jcl-over-slf4j:${depVersion.slf4j}")
  }
}
