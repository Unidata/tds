apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/war-published.gradle"
apply from: "$rootDir/gradle/any/gretty.gradle"

dependencies {
  implementation enforcedPlatform(project(':tds-platform'))

  implementation 'edu.ucar:dap4'
  implementation project(":dap4:d4servlet")

  providedCompile "jakarta.servlet:jakarta.servlet-api:${depVersion.jakartaServletApi}"

  compileOnly 'org.slf4j:slf4j-api'

  runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl'
  runtimeOnly 'org.apache.logging.log4j:log4j-jakarta-web'

  compileOnly 'org.slf4j:slf4j-api'
}

// This specifies the resources from ":dap4" that we need to include in the d4ts war and inplaceWebapp.
def d4testsResourcesCopySpec = copySpec {
   File d4tsResourcesDir = project(":dap4:d4ts").file('src/main/webapp/WEB-INF')

/*These are already in place

    from(d4tsResourcesDir) {
        into('WEB-INF/')
        include('dsr.xml.template')
        include('dsr.html.template')
        include('frontpage.html.template')
        include('favicon.ico')
    }
    from (new File(d4tsResourcesDir, "testfiles/")) {
        into('WEB-INF/testfiles/')
        include('*.nc')
    }
*/
}


import org.akhikhl.gretty.AppBeforeIntegrationTestTask
import org.akhikhl.gretty.AppAfterIntegrationTestTask

task('AppWarBeforeIntegrationTest', type: AppBeforeIntegrationTestTask) {
  dependsOn assemble
  inplace false
  integrationTestTask 'test'
}

task('AppWarAfterIntegrationTest', type: AppAfterIntegrationTestTask) {
  integrationTestTask 'test'
}

war {
  with d4testsResourcesCopySpec
}

gretty {
  httpPort = 8083
  contextPath = '/d4ts'

  afterEvaluate {
    prepareInplaceWebAppFolder.with d4testsResourcesCopySpec
  }
}
